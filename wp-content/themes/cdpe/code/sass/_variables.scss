// This is the default html and body font-size for the base em value.
$em-base: 16px !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em's.
// Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported
// em-calc(10 20 30px 40);
// Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
// em-calc((10, 20, 30, 40px));
// Optionally call with a different base (eg: 8px) to calculate em.
// em-calc(16px 32px 48px, 8px);
// If you require to comma separate your list
// em-calc((16px, 32px, 48), 8px);

@function convert-to-em($value, $base-value: $em-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

@function em-calc($values, $base-value: $em-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

  $emValues: ();
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
  }
  @return $emValues;
}

// Support for the old syntax

@function emCalc($values){
  @return em-calc($values);
}

//
// Layout Variables

$fix-mqs: false !default;

@mixin respond-min($width) {
    // If we're outputting for a fixed media query set...
    @if $fix-mqs {
        // ...and if we should apply these rules...
        @if $fix-mqs >= $width {
            // ...output the content the user gave us.
            @content;
        }
    }
    @else {
        // Otherwise, output it using a regular media query
        @media screen and (min-width: $width) {
            @content;
        }
    }
}

@mixin respond-max($width) {
    // If we're outputting for a fixed media query set...
    @if $fix-mqs {
        // ...and if we should apply these rules...
        @if $fix-mqs >= $width {
            // ...output the content the user gave us.
            @content;
        }
    }
    @else {
        // Otherwise, output it using a regular media query
        @media screen and (max-width: $width) {
            @content;
        }
    }
}


$bp-siteMaxWidth: emCalc(1200);
$bp-small: emCalc(1);
$bp-smallish: emCalc(640);
$bp-medium: emCalc(768);
$bp-large: emCalc(1080);
$bp-huge: emCalc(1600);

// $screen: "only screen";
$small: "only screen and (min-width: #{$bp-small})";
$smallish: "only screen and (min-width: #{$bp-smallish})";
$medium: "only screen and (min-width: #{$bp-medium})";
$large: "only screen and (min-width: #{$bp-large})";
$landscape: "only screen and (orientation: landscape)";
$portrait: "only screen and (orientation: portrait)";

/*--------------------------------------------------------------
# Fonts
--------------------------------------------------------------*/
@font-face {
    font-family: 'Dom Diagonal Bold';
    src: url('../../fonts/Dom_Diagonal_Bold.otf') format('opentype');
    font-style: normal;
}

@font-face {
    font-family: 'Dom Casual';
    src: url('../../fonts/dom_casual_bt.ttf') format('truetype');
    font-style: normal;
}

@font-face {
    font-family: 'Dom Bold BT';
    src: url('../../fonts/Dom_Bold_BT.ttf') format('truetype');
    font-style: normal;
}

$font__sans-serif-simple: sans-serif;
$font__sans-serif: 'Asap', sans-serif;
$font__dom-diagonal: 'Dom Diagonal Bold', sans-serif;
$font__dom-casual: 'Dom Casual', sans-serif;
$font__dom-bold: 'Dom Bold BT', sans-serif;

/*--------------------------------------------------------------
# Text Highlight Padding
--------------------------------------------------------------*/
$title-pad: 0.25em;
$title-lineheight: $title-pad + 1;


/*--------------------------------------------------------------
# Colors
--------------------------------------------------------------*/
$white: #ffffff;
$gray: #f3f3f3;
$lightGray: #f4f4f4;
$borderGray: #ddd;
$charcoal: #333333;
$tangerine: #ff5e2f;
$hoverOrange: #e63600;
$skyblue: #c5e6ff;
$teal: #1ba9c4;
$purple: #5b2d90;
$hoverPurple: #5d0a88;
$magenta: #ab208e;
$lavendar: #34499c;
$pink: #ee478d;
$yellow: #fcff00;